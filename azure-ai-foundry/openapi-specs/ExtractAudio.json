{
  "openapi": "3.0.3",
  "info": {
    "title": "Extract Audio Action",
    "description": "Extracts audio from uploaded video and prepares for transcription.\n\nThis action processes video files to extract audio tracks for transcription. It automatically cleans up the video file after successful extraction to save storage space.\n\nPerfect for Azure AI Foundry workflows that need to prepare audio for speech-to-text processing.",
    "version": "2.0.0-stateless",
    "contact": {
      "name": "Andy Cohen",
      "email": "andy@iamandycohen.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://video-transcribe-api.calmocean-ce622c12.eastus2.azurecontainerapps.io",
      "description": "Production API server"
    }
  ],
  "paths": {
    "/extract-audio": {
      "post": {
        "summary": "Start Audio Extraction Job",
        "description": "Starts a background job to extract audio from uploaded video and store audio reference in workflow state.\n\nReturns immediately with a job_id for monitoring progress. Automatically cleans up video file after successful extraction to save space.\n\nJob-Based Workflow:\n1. Upload video using upload_video action → get job_id, poll until complete\n2. Call this action with workflow_id → get new job_id\n3. Poll GET /jobs/{job_id} every 2-5 seconds until completion\n4. Use same workflow_id with transcribe_audio action",
        "operationId": "extract_audio",
        "tags": ["File Processing"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["workflow_id"],
                "properties": {
                  "workflow_id": {
                    "type": "string",
                    "description": "Workflow identifier - must have uploaded video",
                    "example": "6902573c-9c6c-446c-9f32-72bf5e5554f6"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Audio extraction job started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "job_id": {
                      "type": "string",
                      "description": "Job identifier for polling progress and results",
                      "example": "job_abc123def456"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["queued"],
                      "description": "Initial job status",
                      "example": "queued"
                    },
                    "progress": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100,
                      "description": "Initial progress percentage",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable status message",
                      "example": "Audio extraction job started"
                    },
                    "workflow_id": {
                      "type": "string",
                      "description": "Workflow identifier for subsequent operations",
                      "example": "6902573c-9c6c-446c-9f32-72bf5e5554f6"
                    },
                    "next_action": {
                      "type": "string",
                      "description": "Instructions for polling job status",
                      "example": "Poll GET /jobs/job_abc123def456 every 2-5 seconds for progress and completion"
                    }
                  },
                  "required": ["success", "job_id", "status", "progress", "message", "workflow_id", "next_action"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid workflow_id or no video",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "examples": [
                        "workflow_id is required",
                        "Workflow not found",
                        "No video found in workflow"
                      ]
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Valid authentication required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Audio extraction failed"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "AzureManagedIdentity": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for direct REST API access"
      },
      "AzureManagedIdentity": {
        "type": "http",
        "scheme": "bearer",
        "description": "Azure Managed Identity token (automatically handled by Azure AI Foundry)"
      }
    }
  },
  "tags": [
    {
      "name": "File Processing",
      "description": "Video and audio processing operations"
    }
  ]
}
