{
  "openapi": "3.0.3",
  "info": {
    "title": "Upload Video Action - Stateless",
    "description": "Downloads video from URL and associates it with a workflow for processing.\n\nThis action downloads video files from remote URLs and stores them with a workflow reference. The workflow_id must be obtained from the create_workflow action first.\n\nPerfect for Azure AI Foundry agent workflows where users provide video URLs for transcription processing.",
    "version": "2.0.0-stateless",
    "contact": {
      "name": "Andy Cohen",
      "email": "andy@iamandycohen.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://video-transcribe-api.calmocean-ce622c12.eastus2.azurecontainerapps.io",
      "description": "Production API server"
    }
  ],
  "paths": {
    "/upload-video": {
      "post": {
        "summary": "Upload Video to Workflow",
        "description": "Downloads video from URL and associates it with a workflow.\n\nRequires workflow_id from create_workflow action. Stores video reference in workflow state for subsequent operations.\n\nWorkflow:\n1. Get workflow_id from create_workflow action\n2. Call this action with workflow_id and video URL\n3. Use same workflow_id with extract_audio action",
        "operationId": "upload_video",
        "tags": ["File Processing"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["workflow_id", "source_url"],
                "properties": {
                  "workflow_id": {
                    "type": "string",
                    "description": "Workflow identifier from create_workflow action",
                    "example": "6902573c-9c6c-446c-9f32-72bf5e5554f6"
                  },
                  "source_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Remote URL of the video file to download and process",
                    "example": "https://example.com/sample-video.mp4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video uploaded and associated with workflow successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "workflow_id": {
                      "type": "string",
                      "description": "Workflow identifier for subsequent operations",
                      "example": "6902573c-9c6c-446c-9f32-72bf5e5554f6"
                    },
                    "reference_id": {
                      "type": "string",
                      "description": "File reference identifier stored in workflow state",
                      "example": "file://temp/video_6902573c-9c6c-446c-9f32-72bf5e5554f6_abc123.mp4"
                    },
                    "next_action": {
                      "type": "string",
                      "description": "Suggested next step in the workflow",
                      "example": "Use workflow_id with extract_audio action to continue processing"
                    },
                    "file_info": {
                      "type": "object",
                      "properties": {
                        "size": {
                          "type": "integer",
                          "description": "File size in bytes",
                          "example": 15728640
                        },
                        "contentType": {
                          "type": "string",
                          "description": "MIME type of the uploaded file",
                          "example": "video/mp4"
                        }
                      }
                    }
                  },
                  "required": ["success", "workflow_id", "reference_id", "next_action"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing required parameters or invalid workflow_id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Workflow not found or invalid workflow_id"
                    },
                    "next_action": {
                      "type": "string",
                      "example": "Create a new workflow using create_workflow action first"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Valid authentication required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - video download or processing failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Failed to download video from URL"
                    },
                    "details": {
                      "type": "string",
                      "example": "Connection timeout or invalid URL format"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "AzureManagedIdentity": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for direct REST API access"
      },
      "AzureManagedIdentity": {
        "type": "http",
        "scheme": "bearer",
        "description": "Azure Managed Identity token (automatically handled by Azure AI Foundry)"
      }
    }
  },
  "tags": [
    {
      "name": "File Processing",
      "description": "Video and audio file processing operations"
    }
  ]
}
