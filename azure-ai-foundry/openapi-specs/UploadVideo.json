{
  "openapi": "3.0.3",
  "info": {
    "title": "Upload Video Action - Job-Based",
    "description": "Starts a background job to download video from URL and associate it with a workflow.\n\nThis action creates a background job for downloading video files from remote URLs. Returns immediately with a job_id for progress monitoring. The workflow_id must be obtained from the create_workflow action first.\n\nJob-based design enables:\n- Real-time progress tracking during large video downloads\n- Cancellation support for long-running downloads\n- Non-blocking operation for Azure AI Foundry agents\n- Proper error handling and retry logic\n\nPerfect for Azure AI Foundry agent workflows with large video files or unreliable network connections.",
    "version": "2.0.0-stateless",
    "contact": {
      "name": "Andy Cohen",
      "email": "andy@iamandycohen.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://video-transcribe-api.calmocean-ce622c12.eastus2.azurecontainerapps.io",
      "description": "Production API server"
    }
  ],
  "paths": {
    "/upload-video": {
      "post": {
        "summary": "Start Video Upload Job",
        "description": "Starts a background job to download video from URL and associate it with a workflow.\n\nReturns immediately with a job_id for monitoring progress. Requires workflow_id from create_workflow action.\n\nJob-Based Workflow:\n1. Get workflow_id from create_workflow action\n2. Call this action with workflow_id and video URL â†’ receives job_id\n3. Poll GET /jobs/{job_id} every 2-5 seconds until completion\n4. When job completes, use same workflow_id with extract_audio action\n\nProgress Tracking:\n- Real-time download progress (MB downloaded, percentage)\n- Estimated completion time\n- Cancellation support via POST /jobs/{job_id}/cancel",
        "operationId": "upload_video",
        "tags": ["File Processing"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["workflow_id", "source_url"],
                "properties": {
                  "workflow_id": {
                    "type": "string",
                    "description": "Workflow identifier from create_workflow action",
                    "example": "6902573c-9c6c-446c-9f32-72bf5e5554f6"
                  },
                  "source_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Remote URL of the video file to download and process",
                    "example": "https://example.com/sample-video.mp4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Video upload job started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Always true for successful job creation",
                      "example": true
                    },
                    "job_id": {
                      "type": "string",
                      "description": "Unique identifier for the background upload job",
                      "pattern": "^job_[a-fA-F0-9-]{36}$",
                      "example": "job_123e4567-e89b-12d3-a456-426614174000"
                    },
                    "workflow_id": {
                      "type": "string",
                      "description": "Workflow identifier for subsequent operations",
                      "example": "6902573c-9c6c-446c-9f32-72bf5e5554f6"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["queued"],
                      "description": "Initial job status",
                      "example": "queued"
                    },
                    "progress": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100,
                      "description": "Initial progress (always 0)",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable status message",
                      "example": "Video upload job started"
                    },
                    "next_action": {
                      "type": "string",
                      "description": "Instructions for monitoring job progress",
                      "example": "Poll GET /jobs/job_123e4567-e89b-12d3-a456-426614174000 every 2-5 seconds for progress and completion"
                    }
                  },
                  "required": ["success", "job_id", "workflow_id", "status", "progress", "message", "next_action"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing required parameters or invalid workflow_id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Workflow not found or invalid workflow_id"
                    },
                    "next_action": {
                      "type": "string",
                      "example": "Create a new workflow using create_workflow action first"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Valid authentication required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - video download or processing failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Failed to download video from URL"
                    },
                    "details": {
                      "type": "string",
                      "example": "Connection timeout or invalid URL format"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "AzureManagedIdentity": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for direct REST API access"
      },
      "AzureManagedIdentity": {
        "type": "http",
        "scheme": "bearer",
        "description": "Azure Managed Identity token (automatically handled by Azure AI Foundry)"
      }
    }
  },
  "tags": [
    {
      "name": "File Processing",
      "description": "Video and audio file processing operations"
    }
  ]
}
